Script started on 2023-04-05 10:24:40-03:00 [TERM="xterm-256color" TTY="/dev/pts/9" COLUMNS="162" LINES="14"]
augustinho@augustinho:~/Ed/pa03/c4$ gcc cxx.c -g
augustinho@augustinho:~/Ed/pa03/c4$ g[Kgcc cxx.c -gvalgrind --leak-check=full ./a.out[22Pgcc cxx.c -g[K[K[K[K[K[K[K[K[K[K[K[Kgdb ./a,[K.out
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

[m--Type <RET> for more, q to quit, c to continue without paging--q[Kc
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./a.out[m...
(gdb) run
Starting program: /home/augustinho/Ed/pa03/c4/a.out 

Program received signal SIGSEGV, Segmentation fault.
[34m0x000000000800117a[m in [33mmain[m () at [32mcxx.c[m:13
13	rotation3D->rows=4;
(gdb) q
A debugging session is active.

	Inferior 1 [process 3263] will be killed.

Quit anyway? (y or n) t[Ky
augustinho@augustinho:~/Ed/pa03/c4$ gdd[K[K[Kgdb ./a.outcc cxx.c -g[1Pdb ./a.outcc cxx.c -gvalgrind --leak-check=full ./a.outgdb ./a.out[K[23@valgrind --leak-check=full[C[C[C[C[C[C[C[C
==3400== Memcheck, a memory error detector
==3400== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3400== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3400== Command: ./a.out
==3400== 
==3400== error calling PR_SET_PTRACER, vgdb might block
==3400== Use of uninitialised value of size 8
==3400==    at 0x10917A: main (cxx.c:13)
==3400== 
==3400== Invalid write of size 4
==3400==    at 0x10917A: main (cxx.c:13)
==3400==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3400== 
==3400== 
==3400== Process terminating with default action of signal 11 (SIGSEGV)
==3400==  Access not within mapped region at address 0x0
==3400==    at 0x10917A: main (cxx.c:13)
==3400==  If you believe this happened as a result of a stack
==3400==  overflow in your program's main thread (unlikely but
==3400==  possible), you can try to increase the size of the
==3400==  main thread stack using the --main-stacksize= flag.
==3400==  The main thread stack size used in this run was 8388608.
==3400== 
==3400== HEAP SUMMARY:
==3400==     in use at exit: 0 bytes in 0 blocks
==3400==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==3400== 
==3400== All heap blocks were freed -- no leaks are possible
==3400== 
==3400== Use --track-origins=yes to see where uninitialised values come from
==3400== For lists of detected and suppressed errors, rerun with: -s
==3400== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)
augustinho@augustinho:~/Ed/pa03/c4$ gcc cxxcorreto.c -g
augustinho@augustinho:~/Ed/pa03/c4$ gcc cxxcorreto.c -gvalgrind --leak-check=full ./a.outgdb ./a.out[Kcc cxx.c -g[1Pdb ./a.out
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show w
augustinho@augustinho:~/Ed/pa03/c4$ gcc cxxcorreto.c -g
augustinho@augustinho:~/Ed/pa03/c4$ gdb ./a.out
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

--Type <RET> for more, q to quit, c to continue without paging--c
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...
(gdb) run
Starting program: /home/augustinho/Ed/pa03/c4/a.out 
[Inferior 1 (process 3489) exited normally]
(gdb) q
augustinho@augustinho:~/Ed/pa03/c4$ valgrind --leak-check=full ./a.out
==3531== Memcheck, a memory error detector
==3531== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3531== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3531== Command: ./a.out
==3531== 
==3531== error calling PR_SET_PTRACER, vgdb might block
==3531== 
==3531== HEAP SUMMARY:
==3531==     in use at exit: 0 bytes in 0 blocks
==3531==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==3531== 
==3531== All heap blocks were freed -- no leaks are possible
==3531== 
==3531== For lists of detected and suppressed errors, rerun with: -s
==3531== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
