Script started on 2023-04-05 16:06:33-03:00 [TERM="xterm-256color" TTY="/dev/pts/13" COLUMNS="162" LINES="14"]
augustinho@augustinho:~/Ed/pa03/c9$ valgrind --leak-check=full ./a.outgdb ./a.out[Kcc cxxcorreto.c -g[K -g[Kvalgrind --leak-check=full ./a.outgdb ./a.out[Kcc cxx.c -gscript testegcc cxx.c -g
augustinho@augustinho:~/Ed/pa03/c9$ gcc cxx.c -gvalgrind --leak-check=full ./a.outgdb ./a.out[K
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

[m--Type <RET> for more, q to quit, c to continue without paging--c
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./a.out[m...
(gdb) run
Starting program: /home/augustinho/Ed/pa03/c9/a.out 
[Inferior 1 (process 12373) exited normally]
(gdb) q
augustinho@augustinho:~/Ed/pa03/c9$ gdb ./a.outcc cxx.c -gvalgrind --leak-check=full ./a.outgdb ./a.out[K[23@valgrind --leak-check=full[C[C[C[C[C[C[C[C[22Pgcc cxx.c -gvalgrind --leak-check=full ./a.out
==12401== Memcheck, a memory error detector
==12401== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12401== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==12401== Command: ./a.out
==12401== 
==12401== error calling PR_SET_PTRACER, vgdb might block
==12401== Invalid write of size 4
==12401==    at 0x10916B: f (cxx.c:6)
==12401==    by 0x109180: main (cxx.c:12)
==12401==  Address 0x4a4f068 is 0 bytes after a block of size 40 alloc'd
==12401==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==12401==    by 0x10915E: f (cxx.c:5)
==12401==    by 0x109180: main (cxx.c:12)
==12401== 
==12401== 
==12401== HEAP SUMMARY:
==12401==     in use at exit: 40 bytes in 1 blocks
==12401==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated
==12401== 
==12401== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==12401==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==12401==    by 0x10915E: f (cxx.c:5)
==12401==    by 0x109180: main (cxx.c:12)
==12401== 
==12401== LEAK SUMMARY:
==12401==    definitely lost: 40 bytes in 1 blocks
==12401==    indirectly lost: 0 bytes in 0 blocks
==12401==      possibly lost: 0 bytes in 0 blocks
==12401==    still reachable: 0 bytes in 0 blocks
==12401==         suppressed: 0 bytes in 0 blocks
==12401== 
==12401== For lists of detected and suppressed errors, rerun with: -s
==12401== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
augustinho@augustinho:~/Ed/pa03/c9$ valgrind --leak-check=full ./a.outgdb ./a.out[Kcc cxx.c -gvalgrind --leak-check=full ./a.out[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kgcc cxxcorreto.c -g
augustinho@augustinho:~/Ed/pa03/c9$ gcc cxxcorreto.c -gvalgrind --leak-check=full ./a.out[15Pgcc cxxcorreto.c -gvalgrind --leak-check=full ./a.outgdb ./a.out[K
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

[m--Type <RET> for more, q to quit, c to continue without paging--c
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./a.out[m...
(gdb) run
Starting program: /home/augustinho/Ed/pa03/c9/a.out 
[Inferior 1 (process 12570) exited normally]
(gdb) run[K[K[Kq
augustinho@augustinho:~/Ed/pa03/c9$ gdb ./a.outcc cxxcorreto.c -gvalgrind --leak-check=full ./a.out[15Pgcc cxxcorreto.c -gvalgrind --leak-check=full ./a.out
==12590== Memcheck, a memory error detector
==12590== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12590== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==12590== Command: ./a.out
==12590== 
==12590== error calling PR_SET_PTRACER, vgdb might block
==12590== Invalid write of size 4
==12590==    at 0x10918B: f (cxxcorreto.c:6)
==12590==    by 0x1091AC: main (cxxcorreto.c:12)
==12590==  Address 0x4a4f068 is 0 bytes after a block of size 40 alloc'd
==12590==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==12590==    by 0x10917E: f (cxxcorreto.c:5)
==12590==    by 0x1091AC: main (cxxcorreto.c:12)
==12590== 
==12590== 
==12590== HEAP SUMMARY:
==12590==     in use at exit: 0 bytes in 0 blocks
==12590==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==12590== 
==12590== All heap blocks were freed -- no leaks are possible
==12590== 
==12590== For lists of detected and suppressed errors, rerun with: -s
==12590== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
augustinho@augustinho:~/Ed/pa03/c9$ [Avalgrind --leak-check=full ./a.outgdb ./a.out[Kcc cxxcorreto.c -gvalgrind --leak-check=full ./a.outgdb ./a.out[Kcc cxx.c -g[1Pdb ./a.out[23@valgrind --leak-check=full[C[C[C[C[C[C[C[Cgdb ./a.out[Kcc cxx.c -gvalgrind --leak-check=full ./a.outgdb ./a.out[Kcc cxxcorreto.c -g
augustinho@augustinho:~/Ed/pa03/c9$ gcc cxxcorreto.c -gvalgrind --leak-check=full ./a.out
==12730== Memcheck, a memory error detector
==12730== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12730== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==12730== Command: ./a.out
==12730== 
==12730== error calling PR_SET_PTRACER, vgdb might block
==12730== 
==12730== HEAP SUMMARY:
==12730==     in use at exit: 0 bytes in 0 blocks
==12730==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==12730== 
==12730== All heap blocks were freed -- no leaks are possible
==12730== 
==12730== For lists of detected and suppressed errors, rerun with: -s
==12730== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
augustinho@augustinho:~/Ed/pa03/c9$ gvalgrind --leak-check=full ./a.out[15Pgcc cxxcorreto.c -g
augustinho@augustinho:~/Ed/pa03/c9$ gcc cxxcorreto.c -gvalgrind --leak-check=full ./a.out[15Pgcc cxxcorreto.c -valgrind --leak-check=full ./a.outgdb ./a.out[K
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

[m--Type <RET> for more, q to quit, c to continue without paging--c
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./a.out[m...
(gdb) run
Starting program: /home/augustinho/Ed/pa03/c9/a.out 
q[Inferior 1 (process 12881) exited normally]
(gdb) q
augustinho@augustinho:~/Ed/pa03/c9$ gdb ./a.outcc cxxcorreto.c -gvalgrind --leak-check=full ./a.out[15Pgcc cxxcorreto.c -gvalgrind --leak-check=full ./a.out
==12914== Memcheck, a memory error detector
==12914== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12914== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==12914== Command: ./a.out
==12914== 
==12914== error calling PR_SET_PTRACER, vgdb might block
==12914== 
==12914== HEAP SUMMARY:
==12914==     in use at exit: 0 bytes in 0 blocks
==12914==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==12914== 
==12914== All heap blocks were freed -- no leaks are possible
==12914== 
==12914== For lists of detected and suppressed errors, rerun with: -s
==12914== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
augustinho@augustinho:~/Ed/pa03/c9$ exit

Script done on 2023-04-05 16:11:35-03:00 [COMMAND_EXIT_CODE="0"]
14== Command: ./a.out
==12914== 
==12914== error calling PR_SET_PTRACER, vgdb might block
==12914== 
==12914== HEAP SUMMARY:
==12914==     in use at exit: 0 bytes in 0 blocks
==12914==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==12914== 
==12914== All heap blocks were freed -- no leaks are possible
==12914== 
==12914== For lists of detected and suppressed errors, rerun with: -s
==12914== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)